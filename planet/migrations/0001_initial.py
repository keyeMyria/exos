# Generated by Django 2.0.8 on 2018-08-23 20:30

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('star', '0001_initial'),
        ('observatory', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Planet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, verbose_name='UUID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('modified_local', models.DateTimeField(auto_now=True, verbose_name='Modified - local')),
                ('modified_official', models.DateField(help_text='[rowupdate] The date at which the planet was last officially updated', verbose_name='Modified - official')),
                ('letter', models.CharField(default=None, help_text='[pl_letter] Letter assigned to the planetary component of a planetary system', max_length=2, verbose_name='Letter')),
                ('name', models.CharField(default=None, help_text='[pl_name] Planet name most commonly used in the literature', max_length=120, verbose_name='Name')),
                ('discovery_method', models.PositiveSmallIntegerField(choices=[(1, 'Astrometry'), (2, 'Eclipse Timing Variations'), (3, 'Imaging'), (4, 'Microlensing'), (5, 'Orbital Brightness Modulation'), (6, 'Pulsar Timing'), (7, 'Pulsation Timing Variations'), (8, 'Radial Velocity'), (9, 'Transit')], default=9, help_text='[pl_discmethod] Method by which the planet was first identified', verbose_name='Discovery method')),
                ('orbital_period', models.DecimalField(blank=True, decimal_places=10, help_text='[pl_orbper] Time the planet takes to make a complete orbit around the host star or system', max_digits=20, null=True, verbose_name='Orbital period (days)')),
                ('orbital_period_err_up', models.DecimalField(blank=True, decimal_places=10, help_text='[pl_orbpererr1]', max_digits=20, null=True, verbose_name='Orbital period upper error margin')),
                ('orbital_period_err_low', models.DecimalField(blank=True, decimal_places=10, help_text='[pl_orbpererr2]', max_digits=20, null=True, verbose_name='Orbital period lower error margin')),
                ('orbital_period_limit', models.DecimalField(blank=True, decimal_places=10, help_text='[pl_orbperlim]', max_digits=20, null=True, verbose_name='Orbital period limit')),
                ('orbital_period_nb_measures', models.PositiveSmallIntegerField(default=0, help_text='[pl_orbpern]', verbose_name='Orbital period number of measures')),
                ('orbit_semi_major_axis', models.DecimalField(blank=True, decimal_places=10, help_text='[pl_orbsmax] The longest radius of an elliptic orbit, or, for exoplanets detected via gravitational microlensing or direct imaging, the projected separation in the plane of the sky', max_digits=20, null=True, verbose_name='Orbit Semi-Major Axis (AU)')),
                ('orbit_semi_major_axis_err_up', models.DecimalField(blank=True, decimal_places=10, help_text='[pl_orbsmaxerr1]', max_digits=20, null=True, verbose_name='Orbit Semi-Major Axis upper error margin')),
                ('orbit_semi_major_axis_err_low', models.DecimalField(blank=True, decimal_places=10, help_text='[pl_orbsmaxerr2]', max_digits=20, null=True, verbose_name='Orbit Semi-Major Axis lower error margin')),
                ('orbit_semi_major_axis_limit', models.DecimalField(blank=True, decimal_places=10, help_text='[pl_orbsmaxlim]', max_digits=20, null=True, verbose_name='Orbit Semi-Major Axis limit')),
                ('orbit_semi_major_axis_nb_measures', models.PositiveSmallIntegerField(default=0, help_text='[pl_orbsmaxn]', verbose_name='Orbit Semi-Major Axis number of measures')),
                ('eccentricity', models.DecimalField(blank=True, decimal_places=10, help_text='[pl_orbeccen] Amount by which the orbit of the planet deviates from a perfect circle', max_digits=20, null=True, verbose_name='Eccentricity')),
                ('eccentricity_err_up', models.DecimalField(blank=True, decimal_places=10, help_text='[pl_orbeccenerr1]', max_digits=20, null=True, verbose_name='Eccentricity upper error margin')),
                ('eccentricity_err_low', models.DecimalField(blank=True, decimal_places=10, help_text='[pl_orbeccenerr1]', max_digits=20, null=True, verbose_name='Eccentricity lower error margin')),
                ('eccentricity_limit', models.DecimalField(blank=True, decimal_places=10, help_text='[pl_orbeccenlim]', max_digits=20, null=True, verbose_name='Eccentricity limit')),
                ('eccentricity_nb_measures', models.PositiveSmallIntegerField(default=0, help_text='[pl_orbeccenn]', verbose_name='Orbit Semi-Major Axis number of measures')),
                ('orbit_inclination', models.DecimalField(blank=True, decimal_places=10, help_text='[pl_orbincl] Angular distance of the orbital plane from the line of sight', max_digits=20, null=True, verbose_name='Orbit inclination (deg)')),
                ('orbit_inclination_err_up', models.DecimalField(blank=True, decimal_places=10, help_text='[pl_orbinclerr1]', max_digits=20, null=True, verbose_name='Orbit inclination upper error margin')),
                ('orbit_inclination_err_low', models.DecimalField(blank=True, decimal_places=10, help_text='[pl_orbinclerr2]', max_digits=20, null=True, verbose_name='Orbit inclination lower error margin')),
                ('orbit_inclination_limit', models.DecimalField(blank=True, decimal_places=10, help_text='[pl_orbincllim]', max_digits=20, null=True, verbose_name='Orbit inclination limit')),
                ('orbit_inclination_nb_measures', models.PositiveSmallIntegerField(default=0, help_text='[pl_orbincln]', verbose_name='Orbit inclination number of measures')),
                ('mass', models.DecimalField(blank=True, decimal_places=10, help_text='[pl_bmassj] Best planet mass measurement in units of masses of Jupiter', max_digits=20, null=True, verbose_name='Mass (J)')),
                ('mass_err_up', models.DecimalField(blank=True, decimal_places=10, help_text='[pl_bmassjerr1]', max_digits=20, null=True, verbose_name='Mass upper error margin')),
                ('mass_err_low', models.DecimalField(blank=True, decimal_places=10, help_text='[pl_bmassjerr2]', max_digits=20, null=True, verbose_name='Mass lower error margin')),
                ('mass_limit', models.DecimalField(blank=True, decimal_places=10, help_text='[pl_bmassjlim]', max_digits=20, null=True, verbose_name='Mass limit')),
                ('mass_nb_measures', models.PositiveSmallIntegerField(default=0, help_text='[pl_bmassn]', verbose_name='Mass number of measures')),
                ('mass_calculation_type', models.PositiveSmallIntegerField(choices=[(1, 'Mass'), (2, 'M*sin(i)/sin(i)'), (3, 'M*sin(i)')], default=0, help_text='[pl_bmassprov]', verbose_name='Mass calculation type')),
                ('radius', models.DecimalField(blank=True, decimal_places=10, help_text='[pl_radj] Length of a line segment from the center of the planet to its surface, measured in units of radius of Jupiter', max_digits=20, null=True, verbose_name='Radius (Jupiter radii)')),
                ('radius_err_up', models.DecimalField(blank=True, decimal_places=10, help_text='[pl_radjerr1]', max_digits=20, null=True, verbose_name='Radius upper error margin')),
                ('radius_err_low', models.DecimalField(blank=True, decimal_places=10, help_text='[pl_radjerr2]', max_digits=20, null=True, verbose_name='Radius lower error margin')),
                ('radius_limit', models.DecimalField(blank=True, decimal_places=10, help_text='[pl_radjlim]', max_digits=20, null=True, verbose_name='Radius limit')),
                ('radius_nb_measures', models.PositiveSmallIntegerField(default=0, help_text='[pl_radn]', verbose_name='Radius number of measures')),
                ('density', models.DecimalField(blank=True, decimal_places=10, help_text='[pl_dens] Amount of mass per unit of volume of the planet', max_digits=20, null=True, verbose_name='Density (g/cm-3)')),
                ('density_err_up', models.DecimalField(blank=True, decimal_places=10, help_text='[pl_denserr1]', max_digits=20, null=True, verbose_name='Density upper error margin')),
                ('density_err_low', models.DecimalField(blank=True, decimal_places=10, help_text='[pl_denserr2]', max_digits=20, null=True, verbose_name='Density lower error margin')),
                ('density_limit', models.DecimalField(blank=True, decimal_places=10, help_text='[pl_denslim]', max_digits=20, null=True, verbose_name='Density limit')),
                ('density_nb_measures', models.PositiveSmallIntegerField(default=0, help_text='[pl_densn]', verbose_name='Density number of measures')),
                ('is_ttv', models.BooleanField(default=False, help_text='[pl_ttvflag] Flag indicating if the planet orbit exhibits transit timing variations from another planet in the system', verbose_name='Is TTV')),
                ('is_kepler', models.BooleanField(default=False, help_text='[pl_kepflag] Flag indicating if the planetary system signature is present in data taken with the Kepler mission', verbose_name='Is Kepler')),
                ('is_k2', models.BooleanField(default=False, help_text='[pl_k2flag] Flag indicating if the planetary system signature is present in data taken with the K2 Mission', verbose_name='Is K2')),
                ('discovery_observatory', models.ForeignKey(blank=True, help_text='[pl_facility]', null=True, on_delete=django.db.models.deletion.PROTECT, to='observatory.Observatory')),
                ('star', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='star.Star')),
            ],
        ),
    ]
